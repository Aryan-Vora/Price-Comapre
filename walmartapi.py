import requests
import json
import math


def get_raw_data(search):
    apisearch = search.replace(" ", "%20")
    headersearch = search.replace(" ", "+")
    url = "https://www.walmart.com/orchestra/snb/graphql/Search/48093560def448db9dad9bcfc8e5b556413f9bd4252bc7a300e26df3a24596b3/search?variables=%7B%22id%22%3A%22%22%2C%22affinityOverride%22%3A%22store_led%22%2C%22dealsId%22%3A%22%22%2C%22query%22%3A%22"+apisearch+"%22%2C%22page%22%3A1%2C%22prg%22%3A%22mWeb%22%2C%22catId%22%3A%22%22%2C%22facet%22%3A%22%22%2C%22sort%22%3A%22best_match%22%2C%22rawFacet%22%3A%22%22%2C%22seoPath%22%3A%22%22%2C%22ps%22%3A40%2C%22limit%22%3A40%2C%22ptss%22%3A%22%22%2C%22trsp%22%3A%22%22%2C%22beShelfId%22%3A%22%22%2C%22recall_set%22%3A%22%22%2C%22module_search%22%3A%22%22%2C%22min_price%22%3A%22%22%2C%22max_price%22%3A%22%22%2C%22storeSlotBooked%22%3A%22%22%2C%22additionalQueryParams%22%3A%7B%22hidden_facet%22%3Anull%2C%22translation%22%3Anull%2C%22isMoreOptionsTileEnabled%22%3Atrue%7D%2C%22searchArgs%22%3A%7B%22query%22%3A%22"+apisearch+"%22%2C%22cat_id%22%3A%22%22%2C%22prg%22%3A%22mWeb%22%2C%22facet%22%3A%22%22%7D%2C%22fitmentFieldParams%22%3A%7B%22powerSportEnabled%22%3Atrue%2C%22dynamicFitmentEnabled%22%3Afalse%2C%22extendedAttributesEnabled%22%3Afalse%7D%2C%22fitmentSearchParams%22%3A%7B%22id%22%3A%22%22%2C%22affinityOverride%22%3A%22store_led%22%2C%22dealsId%22%3A%22%22%2C%22query%22%3A%22" + \
        apisearch+"%22%2C%22page%22%3A1%2C%22prg%22%3A%22mWeb%22%2C%22catId%22%3A%22%22%2C%22facet%22%3A%22%22%2C%22sort%22%3A%22best_match%22%2C%22rawFacet%22%3A%22%22%2C%22seoPath%22%3A%22%22%2C%22ps%22%3A40%2C%22limit%22%3A40%2C%22ptss%22%3A%22%22%2C%22trsp%22%3A%22%22%2C%22beShelfId%22%3A%22%22%2C%22recall_set%22%3A%22%22%2C%22module_search%22%3A%22%22%2C%22min_price%22%3A%22%22%2C%22max_price%22%3A%22%22%2C%22storeSlotBooked%22%3A%22%22%2C%22additionalQueryParams%22%3A%7B%22hidden_facet%22%3Anull%2C%22translation%22%3Anull%2C%22isMoreOptionsTileEnabled%22%3Atrue%7D%2C%22searchArgs%22%3A%7B%22query%22%3A%22" + \
        apisearch+"%22%2C%22cat_id%22%3A%22%22%2C%22prg%22%3A%22mWeb%22%2C%22facet%22%3A%22%22%7D%2C%22cat_id%22%3A%22%22%2C%22_be_shelf_id%22%3A%22%22%7D%2C%22enableFashionTopNav%22%3Afalse%2C%22enableRelatedSearches%22%3Atrue%2C%22enablePortableFacets%22%3Atrue%2C%22enableFacetCount%22%3Atrue%2C%22fetchMarquee%22%3Atrue%2C%22fetchSkyline%22%3Atrue%2C%22fetchGallery%22%3Afalse%2C%22fetchSbaTop%22%3Atrue%2C%22fetchDac%22%3Afalse%2C%22tenant%22%3A%22WM_GLASS%22%2C%22enableFlattenedFitment%22%3Atrue%2C%22enableMultiSave%22%3Afalse%2C%22pageType%22%3A%22SearchPage%22%7D"

    payload = {}
    headers = {
        'authority': 'www.walmart.com',
        'accept': 'application/json',
        'accept-language': 'en-US',
        'content-type': 'application/json',
        'cookie': 'WLM=1; vtc=RCgAbT8blnfBD-OrmTDz8k; abqme=false; _pxhd=79877d99034d70c26d9268f391244d615b5760ef5abccc9db1985d059d9a11a0:f70d54a4-4060-11ee-b2cc-46d14fe5e022; TBV=7; CID=00915782-798a-4d45-9980-ede36464a1ac; hasCID=1; SPID=deef30717578a9015b72056e1ac09e9c468a4e43233f0dce15d5634bcfa7385c1e76e1c95447cc219aeecf0dd22edaaawmcxo; type=REGISTERED; _vc=Vsp6zxrwUiytw7zvuVq4eoYPgEBQCnPz7ZnOZNt2nOA%3D; customer=%7B%22firstName%22%3A%22Aryan%22%2C%22lastNameInitial%22%3A%22V%22%7D; _m=9; userContext=eyJhZGRyZXNzRGF0YSI6bnVsbCwiaGFzSXRlbVN1YnNjcmlwdGlvbiI6ZmFsc2UsImhhc01lbWJlcnNoaXBJbmZvIjpmYWxzZSwiaXNEZWZhdWx0IjpmYWxzZSwicGF5bWVudERhdGEiOnsiY2FwaXRhbE9uZUJhbm5lclNub296ZVRTIjowLCJoYXNDYXBPbmUiOmZhbHNlLCJoYXNDYXBPbmVMaW5rZWQiOmZhbHNlLCJoYXNDcmVkaXRDYXJkIjpmYWxzZSwiaGFzRGlyZWN0ZWRTcGVuZENhcmQiOmZhbHNlLCJoYXNFQlQiOmZhbHNlLCJoYXNHaWZ0Q2FyZCI6ZmFsc2UsInNob3dDYXBPbmVCYW5uZXIiOnRydWUsIndwbHVzTm9CZW5lZml0QmFubmVyIjp0cnVlLCJwYXltZW50TWV0aG9kVGFncyI6W119LCJwcm9maWxlRGF0YSI6eyJpc0Fzc29jaWF0ZSI6ZmFsc2UsImlzVGVzdEFjY291bnQiOmZhbHNlLCJtZW1iZXJzaGlwT3B0SW4iOnsiaXNPcHRlZEluIjpmYWxzZX0sImN1c3RvbWVyVHlwZSI6IklORElWSURVQUwifSwic2hvd1NpZ25VcFNwbGFzaCI6dHJ1ZSwiaWFwQXNzdXJlZCI6ZmFsc2V9; adblocked=true; AID=wmlspartner%3D0%3Areflectorid%3D0000000000000000000000%3Alastupd%3D1692774697064; _pxvid=f70d54a4-4060-11ee-b2cc-46d14fe5e022; auth=MTAyOTYyMDE4xJOG2gYGPIej%2BGEj9IkaXyloTL1XoVcSnZXYjgOJjU9146aea9U6ZmrfFYQEvtMxD%2BA24ZVLfXlJvjtHguYTr2I6PCU1Mgg6ypwkV6HUQ03KM%2FMXB5lHtf6pM1H1%2BDLrcru%2FbRQZ4hu5JpN5uYzDEp0t7IZhNENlXoB3EvU0xbO3HJee95YMCSDAfcyV4KGBi5pEBJtJ%2FB2VZ5fYSRDxLsMwge6mEeCbDv2kax1JgF1yP0ebJ6kqJ8n4jr5MUrlxorvqRvrsF1SqGLcKP9Zq%2FK8xxLjeyPxsSdrxYC3%2Fp%2BAds8xBnLG0uWAX3uJGal5%2BQ2VgziovAATToAHDTwN3wKsxB2psTVmBueMQLCOsWd5D%2BDZT%2FkoK1TlHMVQgJBiFOfcIyYOdqkjyjEK0a4ssY7U3jWmD0ztc0AsUNRUx2N4%3D; _tsc=MTQyODYyMDIyNBC9Oy2ktYgNWE22CKfpk9vw3ot4LVY3HvXkZUf4HYNnfxNvpMCxxJkLzyNI0KYkLud1DkNQoCS9yY1vF0C%2BhoqrAbwi1PGbGq78VoFhqcVQJkiAz5Xow8d4oA5RRqnfw9EpEXNflzRDwcrhtZCDryStro%2Byg2gp41aAvXlj8XIfsfrEgKUDoFbDmwsfww6J%2Fb2IOsQP%2FWSDIj4iNgHcnbucc241zN5LIKhd4QTnU2ErpG8qShlk0LUcKXI%2B4FTerYmyroXMP4TJLVJgAhA7QNpaVS6aawih1bc2zzmEWIHl1DWEgk0P0dE92kuJB2n0yZj7jWrLjdjvmHkiZeyzN%2Bq3BG6msBc%2F5%2B6%2BtBXaehJQQF1i%2BsCKFX1DuIB8mRdn6U1NUJjFj3bTWiq4l8S5EbuBSbmcuGTnPY%2FFkTfRcy0jsqt%2FLOWzdQ%3D%3D; locDataV3=eyJpc0RlZmF1bHRlZCI6ZmFsc2UsImlzRXhwbGljaXQiOmZhbHNlLCJpbnRlbnQiOiJQSUNLVVAiLCJwaWNrdXAiOlt7ImJ1SWQiOiIwIiwibm9kZUlkIjoiNTQyNiIsImRpc3BsYXlOYW1lIjoiRnJlbW9udCBTdG9yZSIsIm5vZGVUeXBlIjoiU1RPUkUiLCJhZGRyZXNzIjp7InBvc3RhbENvZGUiOiI5NDUzOCIsImFkZHJlc3NMaW5lMSI6IjQwNTgwIEFsYnJhZSBTdCIsImNpdHkiOiJGcmVtb250Iiwic3RhdGUiOiJDQSIsImNvdW50cnkiOiJVUyIsInBvc3RhbENvZGU5IjoiOTQ1MzgtMjQ0OCJ9LCJnZW9Qb2ludCI6eyJsYXRpdHVkZSI6MzcuNTIwMjQyLCJsb25naXR1ZGUiOi0xMjEuOTg1NjI2fSwiaXNHbGFzc0VuYWJsZWQiOnRydWUsInNjaGVkdWxlZEVuYWJsZWQiOnRydWUsInVuU2NoZWR1bGVkRW5hYmxlZCI6dHJ1ZSwiaHViTm9kZUlkIjoiNTQyNiIsInN0b3JlSHJzIjoiMDY6MDAtMjM6MDAiLCJzdXBwb3J0ZWRBY2Nlc3NUeXBlcyI6WyJQSUNLVVBfSU5TVE9SRSIsIlBJQ0tVUF9DVVJCU0lERSJdLCJzZWxlY3Rpb25UeXBlIjoiQ1VTVE9NRVJfU0VMRUNURUQifV0sInNoaXBwaW5nQWRkcmVzcyI6eyJsYXRpdHVkZSI6MzcuNTYxNSwibG9uZ2l0dWRlIjotMTIxLjk5ODcsInBvc3RhbENvZGUiOiI5NDUzNiIsImNpdHkiOiJGcmVtb250Iiwic3RhdGUiOiJDQSIsImNvdW50cnlDb2RlIjoiVVNBIiwiZ2lmdEFkZHJlc3MiOmZhbHNlLCJ0aW1lWm9uZSI6IkFtZXJpY2EvTG9zX0FuZ2VsZXMifSwiYXNzb3J0bWVudCI6eyJub2RlSWQiOiI1NDI2IiwiZGlzcGxheU5hbWUiOiJGcmVtb250IFN0b3JlIiwiaW50ZW50IjoiUElDS1VQIn0sImluc3RvcmUiOmZhbHNlLCJkZWxpdmVyeSI6eyJidUlkIjoiMCIsIm5vZGVJZCI6IjU0MjYiLCJkaXNwbGF5TmFtZSI6IkZyZW1vbnQgU3RvcmUiLCJub2RlVHlwZSI6IlNUT1JFIiwiYWRkcmVzcyI6eyJwb3N0YWxDb2RlIjoiOTQ1MzgiLCJhZGRyZXNzTGluZTEiOiI0MDU4MCBBbGJyYWUgU3QiLCJjaXR5IjoiRnJlbW9udCIsInN0YXRlIjoiQ0EiLCJjb3VudHJ5IjoiVVMiLCJwb3N0YWxDb2RlOSI6Ijk0NTM4LTI0NDgifSwiZ2VvUG9pbnQiOnsibGF0aXR1ZGUiOjM3LjUyMDI0MiwibG9uZ2l0dWRlIjotMTIxLjk4NTYyNn0sImlzR2xhc3NFbmFibGVkIjp0cnVlLCJzY2hlZHVsZWRFbmFibGVkIjp0cnVlLCJ1blNjaGVkdWxlZEVuYWJsZWQiOnRydWUsImFjY2Vzc1BvaW50cyI6W3siYWNjZXNzVHlwZSI6IkRFTElWRVJZX0FERFJFU1MifV0sImh1Yk5vZGVJZCI6IjU0MjYiLCJpc0V4cHJlc3NEZWxpdmVyeU9ubHkiOmZhbHNlLCJzdXBwb3J0ZWRBY2Nlc3NUeXBlcyI6WyJERUxJVkVSWV9BRERSRVNTIl0sInNlbGVjdGlvblR5cGUiOiJMU19TRUxFQ1RFRCJ9LCJyZWZyZXNoQXQiOjE2OTI4MTk0NzM1NDUsInZhbGlkYXRlS2V5IjoicHJvZDp2MjowMDkxNTc4Mi03OThhLTRkNDUtOTk4MC1lZGUzNjQ2NGExYWMifQ%3D%3D; assortmentStoreId=5426; hasLocData=1; userAppVersion=main-1.95.1-c3c307-0823T0610; bstc=Uncy1D9f4Vd7F7I1RSzhO4; xpth=x-o-mart%2BB2C~x-o-mverified%2Bfalse; xpa=0M34R|12qCK|1Xhwy|1e5na|200gl|2c-Ep|2nl-L|5_lDF|7qUrE|AbLeI|AfbZ-|BukPC|CfYKc|Cj8S_|Cykgk|FHEFP|G-Rah|I02NK|IXu7U|IhmrE|KkThS|KvYZX|MjQX0|N6Yhp|NNAoi|R2vTN|R5ktD|SETkS|TIE1G|Vs9Gq|WA483|ZMf5y|_4HRC|a_9Aj|bZGEj|dO_2Z|dPmpl|fzMmH|m2Cb1|mG0oX|mnOEc|mrdVT|pyVOq|t_VGX|vhvtj|yBIJJ|zW-ys; exp-ck=12qCK11Xhwy51e5na15_lDF27qUrE1AbLeI2AfbZ-1BukPC1CfYKc1IXu7U1KkThS1KvYZX1MjQX03N6Yhp2R2vTN1R5ktD2SETkS1TIE1G1Vs9Gq2a_9Aj1dO_2Z2dPmpl2fzMmH1m2Cb11mG0oX2mnOEc1mrdVT1t_VGX1zW-ys3; _astc=ba4a624b8afee8873374304893524734; xptc=assortmentStoreId%2B5426; xpm=1%2B1692815875%2BRCgAbT8blnfBD-OrmTDz8k~00915782-798a-4d45-9980-ede36464a1ac%2B0; mobileweb=1; ak_bmsc=93743999105E3D882C061A214BBFA9E4~000000000000000000000000000000~YAAQ3zLFF+XqcwGKAQAA7KGwIxQ7/m8ItL20vNrYkYiVUG6UK+RGrzqI8c2EHwdJA7vJR6l4cJxlvHqD1fn4tbafpFjXyDb47Bi5DxUaeW23an8HGq2jfhKQ9X+qYRXbWfU0UfkyjhAR/mfqfwfO9vKdA1SKEy7mrEENkh7+TnwiKDsd9GPpNNgWG2Q+X1RK6LFabjfTjHMygWY2ViT2Dzqze7HBo0fJDkYFm96yC1AxrRYm2iMtDBy0zzepOQU8/0SHGlUXyhs3h8QsuF+y4PoEze7iJZI/lOaHk9dg2bDfpS4PyxO0CPVbxsWDoBk51Ujjaiy2uwlLA3gvQA7cy0GWsiu44KS1nIxCCFAxHqjNCjk7So4eqcDimv4wGy8bxGjpPM+GSpMj2QCwyLkmPR3L4u6syDNUcmw=; WLM=1; xptwj=qq:07d2b50e0893c31c5c7c:LTzo34MslMqz0WaxMjAg7vgBensVKszvXCO3RlYrh61LIrpN4orO2DB37+3OSrEiXNZmdQq3Kv7daULqgM7u26d8Uvy1e64L77Rg7CILEAFhscSMRKvbrFojCc+BHEcB9YqexECNlHa8ILBpaxrFoHkmNY6uo9rSlKuIurwXg9YKEE80opImtLB77rHZTeCMfxbwhf4C5tQxVg==; akavpau_p2=1692816503~id=6304d1a7f08795907b844f75cb1b510d; bm_mi=0F2833177230769A6002840BFE1826F8~YAAQ3zLFF87tcwGKAQAAfsywIxTrWkOah99/5mrePepEzpjmfhEn34xpqOITivuLcJOJSjOxuzp9Szdd9J5DR6ZzmkU4v7R0iJeNC6LyxOahE5VQ/9GyjX9gIuv7JTkPZFAAEm/7a/ezuvaY8XeMO5hsNFJjpevXH5lpXVGQxborjls71dPOTNRqCFQfpEsPAP0muzBUPU1bY9yUXUkzpM+K6FWZkEylzvbo8w5DZV+Aq8UbxNbjCoi79NaJ3L9z3+Tq+iz2dc8uSfQ/0WqpBJy4sONfZDDpFtn/i9GVzXMgDTuvu8Id5oSywIjoZe81kNBEUTQ=~1; sod=0; _lat=6193b0895b8ac465a9c9129244a431fawmjet; com.wm.reflector="reflectorid:0000000000000000000000@lastupd:1692815910000@firstcreate:1692650527368"; xptwg=4209934891:122B419D0DA2AA0:2E190B1:6092352C:1578179D:2FCD58A0:; TS012768cf=0144da2c9a17341ca830e0a180e80471f180bcbb296a2bc4ee19bc79f37c21159afa5ce616101ebf13e7102665c2ba9456137ce681; TS01a90220=0144da2c9a17341ca830e0a180e80471f180bcbb296a2bc4ee19bc79f37c21159afa5ce616101ebf13e7102665c2ba9456137ce681; TS2a5e0c5c027=085b84da95ab2000905d76b1855b1265f6ff95f9be0e32f02c5a8f20fd23d6664ab6007c027a7d3a08d49643ba113000ed751118c9be28ad1cca404de49f2fc7fbc422128d157c516024ed1eb8c32c453c8c5ecc2b098c2c3cda476d44e06a9f; bm_sv=E121C9CA76D7759A1A8B27976CC5C97E~YAAQ3zLFFynvcwGKAQAABOWwIxRWHp4xL6ZCUF2i0ZdKLva9WBLpBQtEg6hh+XPjl+y+E5EFtN0luhKU+3DarKx0wXcKYlIGECIbt1vxGyn7riBtCMjkKXPXs20oTudRmMij4T49OjKxu1AhrK+KBj4A3ccxmKU4TiNiviX5OA9kHcObTLHXy1HSI3r4BZ+Ob4nl9/PbQ8pOegyvdaV7KOtjDc8IWGNTQAP97R9Y/IABBb6PVbxaFI5A2U4EIR1KzJY=~1; SPID=deef30717578a9015b72056e1ac09e9c468a4e43233f0dce15d5634bcfa7385c1e76e1c95447cc219aeecf0dd22edaaawmcxo; TS01a90220=01e51bebd5903e97e9262be6764764abba84be7244a7739a105fe059de235466565807453f271825b7218d28f69bdda8b8bc9ea346; _lat=cbf30b54cbdb3062ad6eb6d2149691c5myacc; _m=9; _tsc=MTQyODYyMDIyFYs90p2hmNBv6RjhzlPjt%2B2saULQeP5ZeJeFrw8fDhpRWy6PYJNUbvzo6QLzPoj3KKp1RGK7DQBEE4diesK8%2FZfHxNgcs7Aqp3lcMmNVxc%2FgZMklQ7W%2B5hLr%2Bbhf85xoLd9X5WS0%2B2yy1aeQhAvnfEMgzBP7L8fFRa5%2BwFIPg97gmoR8XYOeXtKUlhbwY4ua94vmJoH7fftnu4bHxyX7qdB92%2F%2BI3WCiShgnWXLlqnbv16F6QUOJthgf1IbYrwJVcesaNhq7IkrsrGpSbh%2BGLxtrI2%2BO8B4qlsYwUWCUZa37hvd9bdk5b4%2Fmib34Vl8Y8BioCKJJwesn8W7InWrcWSil09iBX1OrYi7oZKqG5ITfRonpQYPXpZlGNtYugV1zBe8jaTrg1tyBXUJ8EUr483SiriWCLrkPCZ8q4WI0sJUb; auth=MTAyOTYyMDE4xJOG2gYGPIej%2BGEj9IkaXyloTL1XoVcSnZXYjgOJjU9146aea9U6ZmrfFYQEvtMxD%2BA24ZVLfXlJvjtHguYTr2I6PCU1Mgg6ypwkV6HUQ03KM%2FMXB5lHtf6pM1H1%2BDLrcru%2FbRQZ4hu5JpN5uYzDEp0t7IZhNENlXoB3EvU0xbO3HJee95YMCSDAfcyV4KGBi5pEBJtJ%2FB2VZ5fYSRDxLsMwge6mEeCbDv2kax1JgF1yP0ebJ6kqJ8n4jr5MUrlxorvqRvrsF1SqGLcKP9Zq%2FK8xxLjeyPxsSdrxYC3%2Fp%2BAds8xBnLG0uWAX3uJGal5%2BQ2VgziovAATToAHDTwN3wKsxB2psTVmBueMQLCOsWd5D%2BDZT%2FkoK1TlHMVQgJBiFOfcIyYOdqkjyjEK0a4ssY7U3jWmD0ztc0AsUNRUx2N4%3D; bm_sv=E121C9CA76D7759A1A8B27976CC5C97E~YAAQ3jLFFxIcGiOKAQAA6wuzIxSNxmu2D5fpNHFRKySVLQs+jx6jCyTEmJAe80FlbhoextImpbgopP+fbEYBa7N4t+he/OGdv+wKT5YkDfTdVSHe49stybRAOK5+7JYdE9SGqeglBO3XRuFWr9gJ/4sY8rjyXrib4QBvxPZESLW49JH44zwbkPc6ObUydPlB53iTdwYF2/NS/jH0AwrNqpndO2MxXD41MeecSJs1UkjGGyMW3m2t9vyjl982CrdOvDA=~1; bstc=Uncy1D9f4Vd7F7I1RSzhO4; com.wm.reflector="reflectorid:0000000000000000000000@lastupd:1692816051000@firstcreate:1692650527368"; exp-ck=12qCK11Xhwy51e5na15_lDF27qUrE1AbLeI2AfbZ-1BukPC1CfYKc1IXu7U1KkThS1KvYZX1MjQX03N6Yhp2R2vTN1R5ktD2SETkS1TIE1G1Vs9Gq2a_9Aj1dO_2Z2dPmpl2fzMmH1m2Cb11mG0oX2mnOEc1mrdVT1t_VGX1zW-ys3; mobileweb=1; vtc=RCgAbT8blnfBD-OrmTDz8k; xpa=0M34R|12qCK|1Xhwy|1e5na|200gl|2c-Ep|2nl-L|5_lDF|7qUrE|AbLeI|AfbZ-|BukPC|CfYKc|Cj8S_|Cykgk|FHEFP|G-Rah|I02NK|IXu7U|IhmrE|KkThS|KvYZX|MjQX0|N6Yhp|NNAoi|R2vTN|R5ktD|SETkS|TIE1G|Vs9Gq|WA483|ZMf5y|_4HRC|a_9Aj|bZGEj|dO_2Z|dPmpl|fzMmH|m2Cb1|mG0oX|mnOEc|mrdVT|pyVOq|t_VGX|vhvtj|yBIJJ|zW-ys; xpm=1%2B1692815875%2BRCgAbT8blnfBD-OrmTDz8k~00915782-798a-4d45-9980-ede36464a1ac%2B0; xptc=assortmentStoreId%2B5426; xpth=x-o-mart%2BB2C~x-o-mverified%2Bfalse; xptwg=1656752934:16829E70092C8C0:391CC2F:C2B463A2:825E7479:74FAC90D:; xptwj=qq:0a0f6b7ac04506e74027:xgEweNWkJ/gqGjveBncQVojlUTAYqWR+k3nK484ZB7WKIkpGO1mJnZI8QveCfRv/fsbrfdkzpjioN7fczvXfVGIfKO+f/SyHa6ML1sm4101+RO1YjMa17XZZmnCs0m2RuF3NdfN8HecTfFWWIpAXxfjGUanvs5QPfWNhB2Xeo1mjtg4N6vl6eAf7RNPvKXYgSQ==; TS012768cf=01e51bebd5903e97e9262be6764764abba84be7244a7739a105fe059de235466565807453f271825b7218d28f69bdda8b8bc9ea346; TS2a5e0c5c027=0819c5fd49ab200077bb6c8524a9b7e3d4e9b156ee2d75deffa718763d9e2aef2d04d3d04072243d0882cbff1e11300068387a21875e367157d828d8891f1e4aa1090e2b66896954dfaa3426fc0b37160225a01b180310868bafc6947eef8a2a; abqme=false; akavpau_p2=1692816651~id=d12b76a7d7af5517a4ae7ed7e0176de2',
        'device_profile_ref_id': '5ILj-HAmPRIxU93_5PEiaQEKLP-Zchj_UFlZ',
        'referer': 'https://www.walmart.com/search?q=' + headersearch + '&affinityOverride=store_led',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Brave";v="116"',
        'sec-ch-ua-mobile': '?1',
        'sec-ch-ua-platform': '"Android"',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'same-origin',
        'sec-gpc': '1',
        'traceparent': '00-e6ac13437f5b3614faf7d1406b158242-1b3b3f62439a03b9-00',
        'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36',
        'wm_mp': 'true',
        'wm_page_url': 'https://www.walmart.com/search?q=' + headersearch + '&affinityOverride=store_led',
        'wm_qos.correlation_id': '2MS5v6UfN0rmM555DOCT1Tr80w4kNwWcY2zC',
        'x-apollo-operation-name': 'Search',
        'x-enable-server-timing': '1',
        'x-latency-trace': '1',
        'x-o-bu': 'WALMART-US',
        'x-o-ccm': 'server',
        'x-o-correlation-id': '2MS5v6UfN0rmM555DOCT1Tr80w4kNwWcY2zC',
        'x-o-gql-query': 'query Search',
        'x-o-mart': 'B2C',
        'x-o-platform': 'rweb',
        'x-o-platform-version': 'main-1.95.1-c3c307-0823T0610',
        'x-o-segment': 'oaoh'
    }
    response = requests.request("GET", url, headers=headers, data=payload)
    # f = open("walmart_" + search.replace(" ", "_") + ".json", "a")
    # f.write(response.text)
    # f.close()
    print(response.text)
    return response.json()


def get_deals_data():
    url = "https://www.walmart.com/orchestra/snb/graphql/Deals/68bf4a8f51c58a6d815475983166c553fd8df6fdd587cfc044d5b46ae01113e2/deals?variables=%7B%22id%22%3A%22%22%2C%22dealsId%22%3A%22back-to-college%2Flast-minute%22%2C%22page%22%3A2%2C%22mosaicPage%22%3A1%2C%22affinityOverride%22%3A%22default%22%2C%22prg%22%3A%22mWeb%22%2C%22facet%22%3A%22fulfillment_speed%3AToday%22%2C%22catId%22%3A%22%22%2C%22rawFacet%22%3A%22fulfillment_speed%3AToday%22%2C%22seoPath%22%3A%22%2Fshop%2Fback-to-college%2Flast-minute%3Ffacet%3Dfulfillment_speed%253AToday%26affinityOverride%3Ddefault%26page%3D2%22%2C%22ps%22%3A40%2C%22ptss%22%3A%22%22%2C%22trsp%22%3A%22%22%2C%22min_price%22%3A%22%22%2C%22max_price%22%3A%22%22%2C%22sort%22%3A%22best_match%22%2C%22beShelfId%22%3A%22%22%2C%22recall_set%22%3A%22%22%2C%22module_search%22%3A%22%22%2C%22storeSlotBooked%22%3A%22%22%2C%22additionalQueryParams%22%3A%7B%22isMoreOptionsTileEnabled%22%3Atrue%7D%2C%22searchParams%22%3A%7B%22id%22%3A%22%22%2C%22dealsId%22%3A%22back-to-college%2Flast-minute%22%2C%22query%22%3A%22%22%2C%22page%22%3A2%2C%22mosaicPage%22%3A1%2C%22affinityOverride%22%3A%22default%22%2C%22prg%22%3A%22mWeb%22%2C%22facet%22%3A%22fulfillment_speed%3AToday%22%2C%22catId%22%3A%22%22%2C%22rawFacet%22%3A%22fulfillment_speed%3AToday%22%2C%22seoPath%22%3A%22%2Fshop%2Fback-to-college%2Flast-minute%3Ffacet%3Dfulfillment_speed%253AToday%26affinityOverride%3Ddefault%26page%3D2%22%2C%22ps%22%3A40%2C%22ptss%22%3A%22%22%2C%22trsp%22%3A%22%22%2C%22min_price%22%3A%22%22%2C%22max_price%22%3A%22%22%2C%22sort%22%3A%22best_match%22%2C%22beShelfId%22%3A%22%22%2C%22recall_set%22%3A%22%22%2C%22module_search%22%3A%22%22%2C%22storeSlotBooked%22%3A%22%22%2C%22additionalQueryParams%22%3A%7B%22isMoreOptionsTileEnabled%22%3Atrue%7D%2C%22cat_id%22%3A%22%22%2C%22_be_shelf_id%22%3A%22%22%2C%22pageType%22%3A%22DealsPage%22%7D%2C%22query%22%3Anull%2C%22pageType%22%3A%22DealsPage%22%2C%22fetchSkyline%22%3Atrue%2C%22enablePortableFacets%22%3Atrue%2C%22enableFacetCount%22%3Atrue%2C%22tenant%22%3A%22WM_GLASS%22%7D"

    payload = {}
    headers = {
        'authority': 'www.walmart.com',
        'accept': 'application/json',
        'accept-language': 'en-US',
        'content-type': 'application/json',
        'cookie': 'WLM=1; vtc=RCgAbT8blnfBD-OrmTDz8k; userAppVersion=main-1.95.0-9f8acf-0819T1541; abqme=false; _pxhd=79877d99034d70c26d9268f391244d615b5760ef5abccc9db1985d059d9a11a0:f70d54a4-4060-11ee-b2cc-46d14fe5e022; TBV=7; CID=00915782-798a-4d45-9980-ede36464a1ac; hasCID=1; SPID=deef30717578a9015b72056e1ac09e9c468a4e43233f0dce15d5634bcfa7385c1e76e1c95447cc219aeecf0dd22edaaawmcxo; type=REGISTERED; _vc=Vsp6zxrwUiytw7zvuVq4eoYPgEBQCnPz7ZnOZNt2nOA%3D; customer=%7B%22firstName%22%3A%22Aryan%22%2C%22lastNameInitial%22%3A%22V%22%7D; _m=9; userContext=eyJhZGRyZXNzRGF0YSI6bnVsbCwiaGFzSXRlbVN1YnNjcmlwdGlvbiI6ZmFsc2UsImhhc01lbWJlcnNoaXBJbmZvIjpmYWxzZSwiaXNEZWZhdWx0IjpmYWxzZSwicGF5bWVudERhdGEiOnsiY2FwaXRhbE9uZUJhbm5lclNub296ZVRTIjowLCJoYXNDYXBPbmUiOmZhbHNlLCJoYXNDYXBPbmVMaW5rZWQiOmZhbHNlLCJoYXNDcmVkaXRDYXJkIjpmYWxzZSwiaGFzRGlyZWN0ZWRTcGVuZENhcmQiOmZhbHNlLCJoYXNFQlQiOmZhbHNlLCJoYXNHaWZ0Q2FyZCI6ZmFsc2UsInNob3dDYXBPbmVCYW5uZXIiOnRydWUsIndwbHVzTm9CZW5lZml0QmFubmVyIjp0cnVlLCJwYXltZW50TWV0aG9kVGFncyI6W119LCJwcm9maWxlRGF0YSI6eyJpc0Fzc29jaWF0ZSI6ZmFsc2UsImlzVGVzdEFjY291bnQiOmZhbHNlLCJtZW1iZXJzaGlwT3B0SW4iOnsiaXNPcHRlZEluIjpmYWxzZX0sImN1c3RvbWVyVHlwZSI6IklORElWSURVQUwifSwic2hvd1NpZ25VcFNwbGFzaCI6dHJ1ZSwiaWFwQXNzdXJlZCI6ZmFsc2V9; adblocked=true; AID=wmlspartner%3D0%3Areflectorid%3D0000000000000000000000%3Alastupd%3D1692774697064; locDataV3=eyJpc0RlZmF1bHRlZCI6ZmFsc2UsImlzRXhwbGljaXQiOmZhbHNlLCJpbnRlbnQiOiJQSUNLVVAiLCJwaWNrdXAiOlt7ImJ1SWQiOiIwIiwibm9kZUlkIjoiNTQyNiIsImRpc3BsYXlOYW1lIjoiRnJlbW9udCBTdG9yZSIsIm5vZGVUeXBlIjoiU1RPUkUiLCJhZGRyZXNzIjp7InBvc3RhbENvZGUiOiI5NDUzOCIsImFkZHJlc3NMaW5lMSI6IjQwNTgwIEFsYnJhZSBTdCIsImNpdHkiOiJGcmVtb250Iiwic3RhdGUiOiJDQSIsImNvdW50cnkiOiJVUyIsInBvc3RhbENvZGU5IjoiOTQ1MzgtMjQ0OCJ9LCJnZW9Qb2ludCI6eyJsYXRpdHVkZSI6MzcuNTIwMjQyLCJsb25naXR1ZGUiOi0xMjEuOTg1NjI2fSwiaXNHbGFzc0VuYWJsZWQiOnRydWUsInNjaGVkdWxlZEVuYWJsZWQiOnRydWUsInVuU2NoZWR1bGVkRW5hYmxlZCI6dHJ1ZSwiaHViTm9kZUlkIjoiNTQyNiIsInN0b3JlSHJzIjoiMDY6MDAtMjM6MDAiLCJzdXBwb3J0ZWRBY2Nlc3NUeXBlcyI6WyJQSUNLVVBfQ1VSQlNJREUiLCJQSUNLVVBfSU5TVE9SRSJdLCJzZWxlY3Rpb25UeXBlIjoiQ1VTVE9NRVJfU0VMRUNURUQifV0sInNoaXBwaW5nQWRkcmVzcyI6eyJsYXRpdHVkZSI6MzcuNTYxNSwibG9uZ2l0dWRlIjotMTIxLjk5ODcsInBvc3RhbENvZGUiOiI5NDUzNiIsImNpdHkiOiJGcmVtb250Iiwic3RhdGUiOiJDQSIsImNvdW50cnlDb2RlIjoiVVNBIiwiZ2lmdEFkZHJlc3MiOmZhbHNlLCJ0aW1lWm9uZSI6IkFtZXJpY2EvTG9zX0FuZ2VsZXMifSwiYXNzb3J0bWVudCI6eyJub2RlSWQiOiI1NDI2IiwiZGlzcGxheU5hbWUiOiJGcmVtb250IFN0b3JlIiwiaW50ZW50IjoiUElDS1VQIn0sImluc3RvcmUiOmZhbHNlLCJkZWxpdmVyeSI6eyJidUlkIjoiMCIsIm5vZGVJZCI6IjU0MjYiLCJkaXNwbGF5TmFtZSI6IkZyZW1vbnQgU3RvcmUiLCJub2RlVHlwZSI6IlNUT1JFIiwiYWRkcmVzcyI6eyJwb3N0YWxDb2RlIjoiOTQ1MzgiLCJhZGRyZXNzTGluZTEiOiI0MDU4MCBBbGJyYWUgU3QiLCJjaXR5IjoiRnJlbW9udCIsInN0YXRlIjoiQ0EiLCJjb3VudHJ5IjoiVVMiLCJwb3N0YWxDb2RlOSI6Ijk0NTM4LTI0NDgifSwiZ2VvUG9pbnQiOnsibGF0aXR1ZGUiOjM3LjUyMDI0MiwibG9uZ2l0dWRlIjotMTIxLjk4NTYyNn0sImlzR2xhc3NFbmFibGVkIjp0cnVlLCJzY2hlZHVsZWRFbmFibGVkIjp0cnVlLCJ1blNjaGVkdWxlZEVuYWJsZWQiOnRydWUsImFjY2Vzc1BvaW50cyI6W3siYWNjZXNzVHlwZSI6IkRFTElWRVJZX0FERFJFU1MifV0sImh1Yk5vZGVJZCI6IjU0MjYiLCJpc0V4cHJlc3NEZWxpdmVyeU9ubHkiOmZhbHNlLCJzdXBwb3J0ZWRBY2Nlc3NUeXBlcyI6WyJERUxJVkVSWV9BRERSRVNTIl0sInNlbGVjdGlvblR5cGUiOiJMU19TRUxFQ1RFRCJ9LCJyZWZyZXNoQXQiOjE2OTI3NzgyOTcxNTQsInZhbGlkYXRlS2V5IjoicHJvZDp2MjowMDkxNTc4Mi03OThhLTRkNDUtOTk4MC1lZGUzNjQ2NGExYWMifQ%3D%3D; assortmentStoreId=5426; hasLocData=1; bstc=dNtpqiDIz2RrwL3nVk1AlY; xpth=x-o-mart%2BB2C~x-o-mverified%2Bfalse; xpa=0M34R|12qCK|1Xhwy|1e5na|200gl|2c-Ep|2nl-L|5_lDF|7qUrE|AbLeI|AfbZ-|BukPC|CfYKc|Cj8S_|Cykgk|FHEFP|G-Rah|I02NK|IXu7U|IhmrE|KkThS|KvYZX|MjQX0|N6Yhp|NNAoi|R2vTN|R5ktD|SETkS|TIE1G|Vs9Gq|WA483|ZMf5y|_4HRC|a_9Aj|bZGEj|dO_2Z|dPmpl|fzMmH|m2Cb1|mG0oX|mnOEc|mrdVT|pyVOq|t_VGX|vhvtj|yBIJJ|zW-ys; exp-ck=12qCK11Xhwy51e5na15_lDF27qUrE1AbLeI2AfbZ-1BukPC1CfYKc1IXu7U1KkThS1KvYZX1MjQX03N6Yhp2R2vTN1R5ktD2SETkS1TIE1G1Vs9Gq2a_9Aj1dO_2Z2dPmpl2fzMmH1m2Cb11mG0oX2mnOEc1mrdVT1t_VGX1zW-ys3; _astc=ba4a624b8afee8873374304893524734; xptc=assortmentStoreId%2B5426; xpm=1%2B1692774698%2BRCgAbT8blnfBD-OrmTDz8k~00915782-798a-4d45-9980-ede36464a1ac%2B0; WLM=1; mobileweb=1; ak_bmsc=283D25B473C9B632345820AB27388D8A~000000000000000000000000000000~YAAQ5DLFF3ittwGKAQAALy88IRRlTrK2NcwwBsosp6opp9iAap1PzlYCpRaIaw/a3RN5HbpxhUjsFIZfxZEUNzeqyHp9jAYKVzGLMKg+3ly49VEN2NzseCFqGsvIjekEnt7zUKxLf/ZS+lE9b8fYm12Mtqu6gmH5gkHp9Lh+fZa3WJwnX5J8v/Nux+TFRjand/GNzBWxSrPIE2Rlm07FJMX8DDK8CIrxkl4qKaD5FU0rLYf/8j3xPW1Bz4IWTAk994XCQYgL2n4PwhhSI0qKwoF6wfrvZ2hfNwTsP1LTYewyZ7cSUBtxWJdCDnUSzmbFMAdTvMcO/EkrSWfWfMf39JjfqRMhwiuIORs5VLO91glAzOtcJJsJmZ2g063NOBeNmx+XrrlY9nd/N/9FVG7/HDwk1d8V/nVyE6M=; auth=MTAyOTYyMDE4xJOG2gYGPIej%2BGEj9IkaXyloTL1XoVcSnZXYjgOJjU9146aea9U6ZmrfFYQEvtMxD%2BA24ZVLfXlJvjtHguYTr2I6PCU1Mgg6ypwkV6HUQ03KM%2FMXB5lHtf6pM1H1%2BDLrcru%2FbRQZ4hu5JpN5uYzDEp0t7IZhNENlXoB3EvU0xbO3HJee95YMCSDAfcyV4KGBi5pEBJtJ%2FB2VZ5fYSRDxLsMwge6mEeCbDv2kax1JgF1yP0ebJ6kqJ8n4jr5MUrlxorvqRvrsF1SqGLcKP9Zq%2FK8xxLjeyPxsSdrxYC3%2Fp%2BAds8xBnLG0uWAX3uJGal5%2BfF5b8oJidgj5MEX6ukbIWslef8JOW2jIpV0iZ5t%2FVaj1W6pdB6EDJWpPRFV4sXEVnAtZyVzzlLj9LL2ifAK%2B%2BUMs9THAmtytF0j1XpWFKKA%3D; _tsc=MTQyODYyMDIywJVP9%2FnFFMC2DCbQp25T6QdmLzkvPOyPt9eN%2FDjBCTgsnYLxHCl6JWOrrZfSYTVXX8jvJTFSIurPZIYOCcx0xJt%2B0I4efcintcFjcPmsoYs0GCKRG0DpQ%2BwtmfY45PHq3uBPlBY7ns435iQyYqoxtVVcvjESuXLkp2SQS5vzbiPPtS1exZnVc%2B71ShJxImpvD8ZWgWg6BEFOModt4j95ONoBl2v%2FYH8mlEnV9fkFPOC%2BdXeLQGPtXoYONxAp2xd5Nahk69oahfq6Yc3PhN5fhypYKdomCNCX4wgYhaVZdDhS2BM4wYZIW%2BrNEcN7gupsGA7eaTYBDba1DyZCzkvh3H3qmzHEHF6pXJXWso%2BBRGu5cjJqr0pOfI7yrxDmPJaioxeEJizjnOsGOSu9LhmCol%2FRhIsjE%2BmCA7HtLmqaGB2MVASLFBxFwg%3D%3D; bm_mi=EE8E97C2C777A134C0C91DBCA52E1583~YAAQ3zLFF1sVWQGKAQAAV+RRIRRm13raWRusrf1FWzFXhuGfsv7BwLY5n3DiHHjGPX+rBO/P8NFR4X4YUYPsabJ3eXk5bSCawhZ0YMdlf6VWzHifZ3u1pMMOjp52V0k2YnXucpv7Ho9bbeNstBLYCnRS4birj63Wnwpd0DmGKoXnxfSRQOL3DTHnpDblIGzr4/zG9H85Ec0JHLJunAg4OWhcD7Ox5UvKHk2JOXw2zkX3xGbGTZ0J93rylJn34Ki3dzsFiKrZwepzHIfThxgg/kpycu4dKiR6CM0/TjH/8aipvpc6XTOHBTDvABZv3qmRJCqo8dIL~1; pxcts=a30d6252-4187-11ee-8f10-6c7370565954; _pxvid=f70d54a4-4060-11ee-b2cc-46d14fe5e022; _pxff_rf=1; _pxff_fp=1; _pxff_cfp=1; _pxff_ccc=1; _px3=7e5f58a82850c01c198fdd2ca0bc38764744958778bc22b3f6d29abd09fcb342:UUZLfNAfPZ4g3EQv3pbgD+WkmQOxdYcx/KZGzT/hTNqA/2aFfoF7YgYQIUbC8KQGxTFfOWoa+xBFaSjkizrC7g==:1000:zBoaRCjrehF3GcpHRtmse6zBehBEZiUlbHEyml5yuj4bD85SOjxtpcqxgmK5h7y/fN4d04ptfZcfn8UqtxtaXM/RxAlAUoqk7yIyG0YbFyVz9R7aDINr834iEz71gqt6lVUvnJ1YcK/g+CrFBu5bT+LNZaBOTB8yLW/tHl/CSNBxHljfkY5sPND+83elGOrC0nIx16vzomBGTEXvdtUeXQ==; _pxde=b29a1b151c27dacc19e189bfb17d47717b2170d69991a12800eb354d06016183:eyJ0aW1lc3RhbXAiOjE2OTI3NzYxMzUzNDV9; xptwj=qq:ceba2b369c964c4c67ff:vVu9PKQoAcbj4dXLCC4HT3hX9pwrGa6ZnnOrlSyxCrgQiXTYu/sipD05GbTuRFlnvqMlBgv8I5F8SwLpV+aZQeLOVcvBJoVcln3AAaO4CcQQRHR4WVIdYOJm0DSzBATQIWIBhWdeSnBaV4P8LIJ1qZNiWiJuDrdBo42EzoEcoi1NHcJsh5XzIjxBtEH6UQAYpRwtaMIP; akavpau_p2=1692776738~id=19cb240f0be621723011c054b7b78c06; sod=0; com.wm.reflector="reflectorid:0000000000000000000000@lastupd:1692776140000@firstcreate:1692650527368"; TS012768cf=01388eaee841eb4680137e9f235992df5936c3e2579877096d70b5dd6d00df8b3eb7ebccd1f86603e7c03734e2976f39ac4db99cae; TS01a90220=01388eaee841eb4680137e9f235992df5936c3e2579877096d70b5dd6d00df8b3eb7ebccd1f86603e7c03734e2976f39ac4db99cae; _lat=9f2f19906a1414e91551a5d4e9448315wmcxo; xptwg=1751979790:15017CB5D6C7BC0:354BEFF:C11356:8177044C:253847CE:; TS2a5e0c5c027=080d45887fab200096cb036ea657f50fc8bd44aa988e37852d20f5f367aa71a46e23599f901eb60f08eb78a2791130002a563042e2aeb94a01a4649dd55421f48ca417a18d4158323168b829b72326cd87f8aa699854ef2cdf0ce4de7def02a3; bm_sv=7A6382539D86B7DFBBD2996598DDFA3D~YAAQ3zLFF28XWQGKAQAAnhBSIRSyB1HH4BY1N77k/x3//Dc6CSQSlQrF7N6gII7TNB1a7oTcZiDjudtnnMndZ7Ig2NCegjMPKAXej6w7FyrFXtxYGM8qrON5CmhkkNjacGR6cI+KrsZr/WrCIjL9fDVZ+73qHvLt8elgvfpOLvlviVSTCkvLVjNWbe+/RZj7Gtad90Z4sfgMTBNz8M68HdgnzRizwo2f8Sd/fXOzcQFbDEedWWEkBtMKOmHadW5Evm8=~1; SPID=deef30717578a9015b72056e1ac09e9c468a4e43233f0dce15d5634bcfa7385c1e76e1c95447cc219aeecf0dd22edaaawmcxo; TS01a90220=018d63cf82aa983ab81eb93cc356091da45cf239f3f733b66be2c559441382d2e522c7a3526b07da13ef55410daec3663e1d3a18b3; _lat=982b06b6b11ebc88a9db429b969ec747cprof; _m=9; _tsc=MTQyODYyMDIyFYs90p2hmNBv6RjhzlPjt%2B2saULQeP5ZeJeFrw8fDhpRWy6PYJNUbvzo6QLzPoj3KKp1RGK7DQBEE4diesK8%2FZfHxNgcs7Aqp3lcMmNVxc%2FgZMklQ7W%2B5hLr%2Bbhf85xoLd9X5WS0%2B2yy1aeQhAvnfEMgzBP7L8fFRa5%2BwFIPg97gmoR8XYOeXtKUlhbwY4ua94vmJoH7fftnu4bHxyX7qdB92%2F%2BI3WCiShgnWXLlqnbv16F6QUOJthgf1IbYrwJVcesaNhq7IkrsrGpSbh%2BGLxtrI2%2BO8B4qlsYwUWCUZa37hvd9bdk5b4%2Fmib34Vl8Y8BioCKJJwesn8W7InWrcWSil09iBX1OrYi7oZKqG5ITfRonpQYPXpZlGNtYugV1zBe8jaTrg1tyBXUJ8EUr483SiriWCLrkPCZ8q4WI0sJUb; ak_bmsc=283D25B473C9B632345820AB27388D8A~000000000000000000000000000000~YAAQ7jLFF/2gdv+JAQAA/VdSIRQREkNC7nIjldSe6uM7M/LYyjzXJAH3XQWBHIqTZ84G6GgqiAfb+rxvypz+zM7yzZo2KmDcgpV+57TU+I/fQC5Nm64Y+i4pLx0LRPv+ftxgW+5X9QZgEhXpdjsuOzbZe3X1bJ/CmGyc3Z3m9ky121kONBKIlndYwYhMZFr6iVxWlJbcI8PBbbEM2EC0a/24dE6Q45LLQzA5RD6kZxyXQeTPLJEva4qut1QTetEHGfbZdSOjEFEzADvxcJzqR3AfpIDQsyvfZliFCPXsfBVKOE9RWk0Djbgp2Ql82nxtRC1GXJRTouYIbe9Mv47PE6WC6IwtdAHlWo1BYmq3igtw48nzS0iniqMUk74Bw/l0MIPBUaNmEbPfyeL0syhUZdvTPFFfTNVR0Z19pVgCGyD+zkw=; auth=MTAyOTYyMDE4xJOG2gYGPIej%2BGEj9IkaXyloTL1XoVcSnZXYjgOJjU9146aea9U6ZmrfFYQEvtMxD%2BA24ZVLfXlJvjtHguYTr2I6PCU1Mgg6ypwkV6HUQ03KM%2FMXB5lHtf6pM1H1%2BDLrcru%2FbRQZ4hu5JpN5uYzDEp0t7IZhNENlXoB3EvU0xbO3HJee95YMCSDAfcyV4KGBi5pEBJtJ%2FB2VZ5fYSRDxLsMwge6mEeCbDv2kax1JgF1yP0ebJ6kqJ8n4jr5MUrlxorvqRvrsF1SqGLcKP9Zq%2FK8xxLjeyPxsSdrxYC3%2Fp%2BAds8xBnLG0uWAX3uJGal5%2BfF5b8oJidgj5MEX6ukbIWslef8JOW2jIpV0iZ5t%2FVaj1W6pdB6EDJWpPRFV4sXEVnAtZyVzzlLj9LL2ifAK%2B%2BUMs9THAmtytF0j1XpWFKKA%3D; bm_sv=7A6382539D86B7DFBBD2996598DDFA3D~YAAQ7jLFFw2Xdv+JAQAA76JRIRQwreAU1DYIRYEvukEzSMSMjJVimncSuHsGOgS4Xc8zhRojfEnk/NaKwaFPx0PX9GYrb5ugOFZwAY1SarZzBzR1689yTGEGTUIvnqnRAKTA3bTXBFE/ienwaWtS7XXONKa3U2RVzZpFghSmT3q99nskgYuxpWoc1V48brshlt+tdnoQOAEKcYRRgZNuG7O3B28jFh4Me7Rk/wP9IqIE+mUbTxuCcxBjBFfrF70gkw==~1; bstc=dNtpqiDIz2RrwL3nVk1AlY; com.wm.reflector="reflectorid:0000000000000000000000@lastupd:1692776159000@firstcreate:1692650527368"; exp-ck=12qCK11Xhwy51e5na15_lDF27qUrE1AbLeI2AfbZ-1BukPC1CfYKc1IXu7U1KkThS1KvYZX1MjQX03N6Yhp2R2vTN1R5ktD2SETkS1TIE1G1Vs9Gq2a_9Aj1dO_2Z2dPmpl2fzMmH1m2Cb11mG0oX2mnOEc1mrdVT1t_VGX1zW-ys3; mobileweb=1; vtc=RCgAbT8blnfBD-OrmTDz8k; xpa=0M34R|12qCK|1Xhwy|1e5na|200gl|2c-Ep|2nl-L|5_lDF|7qUrE|AbLeI|AfbZ-|BukPC|CfYKc|Cj8S_|Cykgk|FHEFP|G-Rah|I02NK|IXu7U|IhmrE|KkThS|KvYZX|MjQX0|N6Yhp|NNAoi|R2vTN|R5ktD|SETkS|TIE1G|Vs9Gq|WA483|ZMf5y|_4HRC|a_9Aj|bZGEj|dO_2Z|dPmpl|fzMmH|m2Cb1|mG0oX|mnOEc|mrdVT|pyVOq|t_VGX|vhvtj|yBIJJ|zW-ys; xpm=1%2B1692774698%2BRCgAbT8blnfBD-OrmTDz8k~00915782-798a-4d45-9980-ede36464a1ac%2B0; xptc=assortmentStoreId%2B5426; xpth=x-o-mart%2BB2C~x-o-mverified%2Bfalse; xptwg=3817751815:FE439D95500738:2852096:94C79F9C:462FB3B2:A9592878:; xptwj=qq:861a935d14ae3c937a15:CfMhOMZhRZq1r/++sI63QHVgCtt9W2xkb7gFXUrHNwFXA0VWXp/1JfPE+Em+i/dZv159SmH/XbKC+GlKEi5aA97j8o2WvEWw2/Y/Yv/Tboi+YuSPOIsNy4gi/KrP1TSE4jrAG8g8KNbqy/Ixlb3teC7ShdJQCuTf3hzWaAzxuDv/j+1vyJtcui+L0wl0scwY; TS012768cf=018d63cf82aa983ab81eb93cc356091da45cf239f3f733b66be2c559441382d2e522c7a3526b07da13ef55410daec3663e1d3a18b3; TS2a5e0c5c027=08a556681fab2000a7a10030878a433d8f612b52f9938c5ba6900a07eabee6282cdd82a321f1945308d5fcba2f1130002180172be38aaa9f400ff247ee4b48cd4bcdf70e6de4616756c4bfc472cedc4a19d9b547540e510d3a2ff87e31ac69ce; abqme=false; akavpau_p2=1692776759~id=60ec01fdc705b1c674e125ef02957ce3',
        'device_profile_ref_id': 'ovW3jZbhD3ACjxmdF8c1F2iKZ3sfiQog7gF1',
        'referer': 'https://www.walmart.com/shop/back-to-college/last-minute?facet=fulfillment_speed%3AToday&affinityOverride=default&page=2',
        'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Brave";v="116"',
        'sec-ch-ua-mobile': '?1',
        'sec-ch-ua-platform': '"Android"',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'same-origin',
        'sec-gpc': '1',
        'traceparent': '00-fb3160a5e20cbddf9f624b562843aeca-0a39e0428ad8405d-00',
        'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36',
        'wm_mp': 'true',
        'wm_page_url': 'https://www.walmart.com/shop/back-to-college/last-minute?facet=fulfillment_speed%3AToday&affinityOverride=default&page=2',
        'wm_qos.correlation_id': '7rC8nQrL2TFKPPGSfZSZ52mRAf6-PM0rvj9g',
        'x-apollo-operation-name': 'Deals',
        'x-enable-server-timing': '1',
        'x-latency-trace': '1',
        'x-o-bu': 'WALMART-US',
        'x-o-ccm': 'server',
        'x-o-correlation-id': '7rC8nQrL2TFKPPGSfZSZ52mRAf6-PM0rvj9g',
        'x-o-gql-query': 'query Deals',
        'x-o-mart': 'B2C',
        'x-o-platform': 'rweb',
        'x-o-platform-version': 'main-1.95.0-9f8acf-0819T1541',
        'x-o-segment': 'oaoh'
    }
    response = requests.request("GET", url, headers=headers, data=payload)
    f = open("walmartdeals.json", "a")
    f.write(response.text)
    f.close()
# this will break if I have a bad json file


def parse_data(data):
    parsed_data = []
    # find product count
    if (
        data.get("data") and
        data["data"].get("search") and
        data["data"]["search"].get("searchResult") and
        data["data"]["search"]["searchResult"].get("itemStacks") and
        data["data"]["search"]["searchResult"]["itemStacks"][0] and
        data["data"]["search"]["searchResult"]["itemStacks"][0].get("itemsV2")
    ):
        itemCount = len(data["data"]["search"]["searchResult"]
                        ["itemStacks"][0]["itemsV2"])

        # go through each product and add it to the list
        # temp list that contains a single product and the name and price for it
        for i in range(itemCount):
            product = data["data"]["search"]["searchResult"]["itemStacks"][0]["itemsV2"][i]
            if (product["__typename"] != "Product"):
                continue
            # check if price or name is null
            if (
                product.get("name") and
                product.get("priceInfo") and
                product["priceInfo"].get("currentPrice") and
                product["priceInfo"]["currentPrice"].get("price") and
                product["priceInfo"].get("unitPrice") and
                product["priceInfo"]["unitPrice"].get("priceString") and
                product["priceInfo"]["unitPrice"].get("price") and
                product.get("imageInfo") and
                product["imageInfo"].get("thumbnailUrl")
            ):
                parsed_data.append({
                    "name": product["name"],
                    "price": product["priceInfo"]["currentPrice"]["price"],
                    "unitPrice": product["priceInfo"]["unitPrice"]["priceString"],
                    "unitPriceValue": product["priceInfo"]["unitPrice"]["price"],
                    "image": product["imageInfo"]["thumbnailUrl"],
                    "minShippingCount": int(math.ceil(50/product["priceInfo"]["currentPrice"]["price"])),
                    "link": "https://walmart.com"+product["canonicalUrl"],
                    "from": "Walmart"

                })
    return list({item['name']: item for item in parsed_data}.values())
#    return sorted(parsed_data, key=lambda x: x["price"])
